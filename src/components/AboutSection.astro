---
import Navbar from "./Navbar.astro";
import "../global.css";
---

<!-- Section A propos -->
<section id="about" class="h-[100svh] md:h-[80svh] flex flex-col">
  <Navbar />
  <div
    class="px-5 flex flex-col items-center justify-center flex-1 md:flex-row md:px-[28rem] 2xl:px-[30rem] 3xl:px-[40rem] 4xl:px-[50rem] md:gap-8"
  >
    <img
      src="/axel.png"
      alt="Axel"
      class="w-30 h-30 mb-6 rounded-full bg-primary md:mb-0 photo-entrance"
    />
    <p class="font-body font-light text-entrance">
      <span class="text-primary font-semibold">Développeur web</span>, avec un
      petit faible pour le <span class="text-primary">design d'interface</span>.
      Je jongle entre <span class="text-primary">code propre</span> et
      <span class="text-primary">UI soignée</span>, toujours avec l'envie de
      créer des trucs utiles, clairs… et un peu <span class="text-primary"
        >cool</span
      >
      quand même.
    </p>
  </div>

  <!-- Indicateur de scroll -->
  <div class="scroll-indicator">
    <svg width="24" height="24" viewBox="0 0 24 24" fill="none">
      <path
        d="M12 5L12 19M12 19L7 14M12 19L17 14"
        stroke="currentColor"
        stroke-width="2"
        stroke-linecap="round"
        stroke-linejoin="round"></path>
    </svg>
    <span class="scroll-text">Découvrir</span>
  </div>
</section>

<script>
  import { gsap } from "gsap";

  function initScrollIndicator() {
    const scrollIndicator = document.querySelector(".scroll-indicator");
    const scrollIcon = scrollIndicator?.querySelector("svg");
    const scrollText = scrollIndicator?.querySelector(".scroll-text");

    if (!scrollIndicator || !scrollIcon || !scrollText) return;

    let hasScrolled = false;

    // Animation de l'indicateur
    const tl = gsap.timeline({ repeat: -1, delay: 2 });

    tl
      // Animation du texte
      .fromTo(
        scrollText,
        {
          opacity: 0.6,
        },
        {
          opacity: 1,
          duration: 1.5,
          ease: "power2.inOut",
        }
      )
      .to(scrollText, {
        opacity: 0.6,
        duration: 1.5,
        ease: "power2.inOut",
      })
      // Animation de la flèche (en parallèle)
      .fromTo(
        scrollIcon,
        {
          y: 0,
          opacity: 0.7,
        },
        {
          y: 8,
          opacity: 1,
          duration: 1.2,
          ease: "power2.inOut",
        },
        0
      )
      .to(scrollIcon, {
        y: 0,
        opacity: 0.7,
        duration: 1.2,
        ease: "power2.inOut",
      })
      // Pause entre les cycles
      .to({}, { duration: 0.8 });

    // Disparition au premier scroll
    function handleFirstScroll() {
      if (hasScrolled) return;

      if (window.scrollY > 100) {
        hasScrolled = true;

        // Arrêter l'animation en boucle
        tl.kill();

        // Animation de disparition
        gsap.to(scrollIndicator, {
          opacity: 0,
          y: 20,
          duration: 0.8,
          ease: "power2.out",
          onComplete: () => {
            if (scrollIndicator) {
              (scrollIndicator as HTMLElement).style.display = "none";
            }
          },
        });

        // Supprimer l'écouteur
        window.removeEventListener("scroll", handleFirstScroll);
      }
    }

    // Écouter le scroll
    window.addEventListener("scroll", handleFirstScroll);
  }

  // Initialiser quand le DOM est prêt
  if (document.readyState === "loading") {
    document.addEventListener("DOMContentLoaded", initScrollIndicator);
  } else {
    initScrollIndicator();
  }
</script>

<style>
  /* Animation d'entrée pour la photo */
  .photo-entrance {
    opacity: 0;
    transform: scale(0.8);
    animation: photoFadeInScale 0.8s ease-out forwards;
  }

  /* Animation d'entrée pour le texte */
  .text-entrance {
    opacity: 0;
    transform: translateX(30px);
    animation: textSlideIn 1s ease-out 0.3s forwards;
  }

  /* Indicateur de scroll */
  .scroll-indicator {
    position: absolute;
    bottom: 2rem;
    left: 50%;
    transform: translateX(-50%);
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0.5rem;
    color: var(--text-color);
    opacity: 0.7;
    cursor: pointer;
    transition: opacity 0.3s ease;
  }

  .scroll-indicator:hover {
    opacity: 1;
  }

  .scroll-text {
    font-size: 0.875rem;
    font-family: var(--font-body);
    font-weight: 300;
    letter-spacing: 0.5px;
    text-transform: lowercase;
  }

  .scroll-indicator svg {
    width: 20px;
    height: 20px;
    opacity: 0.7;
  }

  /* Responsive */
  @media (max-width: 768px) {
    .scroll-indicator {
      bottom: 1.5rem;
    }

    .scroll-text {
      font-size: 0.75rem;
    }

    .scroll-indicator svg {
      width: 18px;
      height: 18px;
    }
  }

  /* Keyframes pour la photo */
  @keyframes photoFadeInScale {
    0% {
      opacity: 0;
      transform: scale(0.8);
    }
    100% {
      opacity: 1;
      transform: scale(1);
    }
  }

  /* Keyframes pour le texte */
  @keyframes textSlideIn {
    0% {
      opacity: 0;
      transform: translateX(30px);
    }
    100% {
      opacity: 1;
      transform: translateX(0);
    }
  }

  /* Optimisation des performances */
  .photo-entrance,
  .text-entrance {
    will-change: transform, opacity;
  }

  /* Réduction du mouvement pour l'accessibilité */
  @media (prefers-reduced-motion: reduce) {
    .photo-entrance,
    .text-entrance {
      animation: none;
      opacity: 1;
      transform: none;
    }

    .scroll-indicator {
      animation: none;
    }
  }
</style>
